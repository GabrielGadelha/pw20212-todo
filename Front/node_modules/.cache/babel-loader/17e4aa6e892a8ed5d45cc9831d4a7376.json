{"ast":null,"code":"/**\n * Serialize data into a cookie header.\n */\nfunction serialize(name, val, options) {\n  const opt = options || {};\n  const enc = encodeURIComponent;\n  /* eslint-disable-next-line no-control-regex */\n\n  const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  const value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  let str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    const maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid');\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n\n      case 'none':\n        str += '; SameSite=None';\n        break;\n\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\n\n\nfunction isSecureEnvironment(req) {\n  if (!req || !req.headers || !req.headers.host) {\n    throw new Error('The \"host\" request header is not available');\n  }\n\n  const host = req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0] || req.headers.host;\n\n  if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Serialize a cookie to a string.\n */\n\n\nfunction serializeCookie(cookie, secure) {\n  var _a, _b, _c;\n\n  return serialize(cookie.name, cookie.value, {\n    maxAge: cookie.maxAge,\n    expires: new Date(Date.now() + cookie.maxAge * 1000),\n    httpOnly: true,\n    secure,\n    path: (_a = cookie.path) !== null && _a !== void 0 ? _a : '/',\n    domain: (_b = cookie.domain) !== null && _b !== void 0 ? _b : '',\n    sameSite: (_c = cookie.sameSite) !== null && _c !== void 0 ? _c : 'lax'\n  });\n}\n/**\n * Get Cookie Header strings.\n */\n\n\nexport function getCookieString(req, res, cookies) {\n  const strCookies = cookies.map(c => serializeCookie(c, isSecureEnvironment(req)));\n  const previousCookies = res.getHeader('Set-Cookie');\n\n  if (previousCookies) {\n    if (previousCookies instanceof Array) {\n      Array.prototype.push.apply(strCookies, previousCookies);\n    } else if (typeof previousCookies === 'string') {\n      strCookies.push(previousCookies);\n    }\n  }\n\n  return strCookies;\n}\n/**\n * Set one or more cookies.\n */\n\nexport function setCookies(req, res, cookies) {\n  res.setHeader('Set-Cookie', getCookieString(req, res, cookies));\n}\n/**\n * Set one or more cookies.\n */\n\nexport function setCookie(req, res, cookie) {\n  setCookies(req, res, [cookie]);\n}\nexport function deleteCookie(req, res, name) {\n  setCookie(req, res, {\n    name,\n    value: '',\n    maxAge: -1\n  });\n}","map":{"version":3,"mappings":"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","names":["serialize","name","val","options","opt","enc","encodeURIComponent","fieldContentRegExp","TypeError","test","value","str","maxAge","isNaN","isFinite","Math","floor","domain","path","expires","toUTCString","httpOnly","secure","sameSite","toLowerCase","isSecureEnvironment","req","headers","host","Error","indexOf","split","endsWith","serializeCookie","cookie","Date","now","_a","_b","_c","getCookieString","res","cookies","strCookies","map","c","previousCookies","getHeader","Array","prototype","push","apply","setCookies","setHeader","setCookie","deleteCookie"],"sources":["/home/gabriel/Dropbox/Ufersa/Aulas/PW/2021.2/Unidade 2/aula 8 - pratica/todo/node_modules/@supabase/gotrue-js/src/lib/cookies.ts"],"sourcesContent":["type Cookie = {\n  name: string\n  value: string\n  maxAge: number\n  domain?: string\n  path?: string\n  sameSite?: string\n}\n\n/**\n * Serialize data into a cookie header.\n */\nfunction serialize(\n  name: string,\n  val: string,\n  options: {\n    maxAge: number\n    domain: string\n    path: string\n    expires: Date\n    httpOnly: boolean\n    secure: boolean\n    sameSite: string\n  }\n) {\n  const opt = options || {}\n  const enc = encodeURIComponent\n  /* eslint-disable-next-line no-control-regex */\n  const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid')\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid')\n  }\n\n  const value = enc(val)\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid')\n  }\n\n  let str = name + '=' + value\n\n  if (null != opt.maxAge) {\n    const maxAge = opt.maxAge - 0\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge)\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid')\n    }\n\n    str += '; Domain=' + opt.domain\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid')\n    }\n\n    str += '; Path=' + opt.path\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid')\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly'\n  }\n\n  if (opt.secure) {\n    str += '; Secure'\n  }\n\n  if (opt.sameSite) {\n    const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite\n\n    switch (sameSite) {\n      case 'lax':\n        str += '; SameSite=Lax'\n        break\n      case 'strict':\n        str += '; SameSite=Strict'\n        break\n      case 'none':\n        str += '; SameSite=None'\n        break\n      default:\n        throw new TypeError('option sameSite is invalid')\n    }\n  }\n\n  return str\n}\n\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nfunction isSecureEnvironment(req: any) {\n  if (!req || !req.headers || !req.headers.host) {\n    throw new Error('The \"host\" request header is not available')\n  }\n\n  const host =\n    (req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0]) || req.headers.host\n  if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Serialize a cookie to a string.\n */\nfunction serializeCookie(cookie: Cookie, secure: boolean) {\n  return serialize(cookie.name, cookie.value, {\n    maxAge: cookie.maxAge,\n    expires: new Date(Date.now() + cookie.maxAge * 1000),\n    httpOnly: true,\n    secure,\n    path: cookie.path ?? '/',\n    domain: cookie.domain ?? '',\n    sameSite: cookie.sameSite ?? 'lax',\n  })\n}\n\n/**\n * Get Cookie Header strings.\n */\nexport function getCookieString(req: any, res: any, cookies: Array<Cookie>): string[] {\n  const strCookies = cookies.map((c) => serializeCookie(c, isSecureEnvironment(req)))\n  const previousCookies = res.getHeader('Set-Cookie')\n  if (previousCookies) {\n    if (previousCookies instanceof Array) {\n      Array.prototype.push.apply(strCookies, previousCookies)\n    } else if (typeof previousCookies === 'string') {\n      strCookies.push(previousCookies)\n    }\n  }\n  return strCookies\n}\n\n/**\n * Set one or more cookies.\n */\nexport function setCookies(req: any, res: any, cookies: Array<Cookie>) {\n  res.setHeader('Set-Cookie', getCookieString(req, res, cookies))\n}\n\n/**\n * Set one or more cookies.\n */\nexport function setCookie(req: any, res: any, cookie: Cookie) {\n  setCookies(req, res, [cookie])\n}\n\nexport function deleteCookie(req: any, res: any, name: string) {\n  setCookie(req, res, {\n    name,\n    value: '',\n    maxAge: -1,\n  })\n}\n"]},"metadata":{},"sourceType":"module"}